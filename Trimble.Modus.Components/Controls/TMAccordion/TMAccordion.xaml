<?xml version="1.0" encoding="utf-8"?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Trimble.Modus.Components.TMAccordion"
             xmlns:converters="clr-namespace:Trimble.Modus.Components.Converters"
             xmlns:constants="clr-namespace:Trimble.Modus.Components.Constant"
             xmlns:local="clr-namespace:Trimble.Modus.Components.Controls.TMAccordion"
             x:Name="accordionView">
  <ContentView.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <local:TMAccordionStyle/>
      </ResourceDictionary.MergedDictionaries>
      <converters:ImageNullOrEmptyBoolConverter x:Key="ImageNullOrEmptyBoolConverter" />
      <converters:StringNotNullOrEmptyBoolConverter x:Key="StringNotNullOrEmptyBoolConverter" />
    </ResourceDictionary>
  </ContentView.Resources>
  <ContentView.Content>
    <Border StrokeThickness="0"
            VerticalOptions="Center">
      <Border.StrokeShape>
        <Rectangle RadiusX="4"
                   RadiusY="4" />
      </Border.StrokeShape>
      <Grid RowSpacing="0" RowDefinitions="Auto, Auto">
        <ContentView VerticalOptions="Center"
                     Padding="0,0,0,20"
                     Margin="0,-10,0,0"
                     Grid.Row="1"
                     x:Name="_accContent"
                     IsVisible="False"
                     BackgroundColor="{x:DynamicResource AccordionBackgroundColor}"
                     Content="{Binding Source={x:Reference accordionView}, Path=AccordionContentView}">
          <ContentView.Triggers>
            <DataTrigger TargetType="ContentView"
                         Binding="{Binding Source={x:Reference accordionView}, Path=IsEnabled}"
                         Value="false">
              <Setter Property="Opacity"
                      Value="0.5" />
            </DataTrigger>
            <DataTrigger TargetType="ContentView"
                         Binding="{Binding Source={x:Reference accordionView}, Path=IsEnabled}"
                         Value="true">
              <Setter Property="Opacity"
                      Value="1" />
            </DataTrigger>
          </ContentView.Triggers>
        </ContentView>
        <Grid VerticalOptions="Center"
              Padding="8,4"
              BackgroundColor="{x:DynamicResource AccordionBackgroundColor}"
              HeightRequest="56">
          <Grid.Triggers>
            <DataTrigger TargetType="Grid"
                         Binding="{Binding Source={x:Reference accordionView}, Path=Size}"
                         Value="Small">
              <Setter Property="HeightRequest"
                      Value="48" />
              <Setter Property="Padding"
                      Value="8,4" />
            </DataTrigger>
            <DataTrigger TargetType="Grid"
                         Binding="{Binding Source={x:Reference accordionView}, Path=Size}"
                         Value="Default">
              <Setter Property="HeightRequest"
                      Value="56" />
              <Setter Property="Padding"
                      Value="8,0" />
            </DataTrigger>
            <DataTrigger TargetType="Grid"
                         Binding="{Binding Source={x:Reference accordionView}, Path=Size}"
                         Value="Large">
              <Setter Property="HeightRequest"
                      Value="64" />
              <Setter Property="Padding"
                      Value="8" />
            </DataTrigger>
            <DataTrigger TargetType="Grid"
                         Binding="{Binding Source={x:Reference accordionView}, Path=Size}"
                         Value="XLarge">
              <Setter Property="HeightRequest"
                      Value="80" />
              <Setter Property="Padding"
                      Value="8,16" />
            </DataTrigger>
            <DataTrigger TargetType="Grid"
                         Binding="{Binding Source={x:Reference accordionView}, Path=IsEnabled}"
                         Value="false">
              <Setter Property="Opacity"
                      Value="0.5" />
            </DataTrigger>
            <DataTrigger TargetType="Grid"
                         Binding="{Binding Source={x:Reference accordionView}, Path=IsEnabled}"
                         Value="true">
              <Setter Property="Opacity"
                      Value="1" />
            </DataTrigger>
          </Grid.Triggers>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid.GestureRecognizers>
            <TapGestureRecognizer Tapped="TitleTapped" />
          </Grid.GestureRecognizers>
          <Image x:Name="_leftIcon"
                 VerticalOptions="Center"
                 Margin="0,0,-12,0"
                 Grid.Column="1"
                 Source="{Binding Source={x:Reference accordionView}, Path=LeftIconSource}"
                 IsVisible="{Binding Source={x:Reference accordionView}, Path=LeftIconSource, Converter={StaticResource ImageNullOrEmptyBoolConverter}}" />
          <StackLayout HorizontalOptions="Start"
                       Grid.Column="2"
                       Orientation="Vertical"
                       Padding="0"
                       Spacing="0"
                       VerticalOptions="Center">
            <Label FontSize="16"
                   FontFamily="OpenSansRegular"
                   HorizontalOptions="Start"
                   VerticalOptions="Center"
                   Margin="16,0,0,0"
                   Text="{Binding Source={x:Reference accordionView}, Path=AccordionTitle}"
                   TextColor="{x:DynamicResource AccordionTitleColor}">
              <Label.Triggers>
                <DataTrigger TargetType="Label"
                             Binding="{Binding Source={x:Reference accordionView}, Path=IsOpen}"
                             Value="false">
                  <Setter Property="FontAttributes"
                          Value="None" />
                </DataTrigger>
                <DataTrigger TargetType="Label"
                             Binding="{Binding Source={x:Reference accordionView}, Path=IsOpen}"
                             Value="true">
                  <Setter Property="FontAttributes"
                          Value="Bold" />
                </DataTrigger>
              </Label.Triggers>
            </Label>
            <Label Text="{Binding Source={x:Reference accordionView}, Path=AccordionSubtitle}"
                   FontFamily="OpenSansRegular"
                   VerticalOptions="Center"
                   Margin="16,0,0,0"
                   FontSize="10"
                   TextColor="{x:DynamicResource AccordionSubtitleColor}"
                   IsVisible="{Binding Source={x:Reference accordionView}, Path=AccordionSubtitle, Converter={StaticResource StringNotNullOrEmptyBoolConverter}}" />
          </StackLayout>
          <Image x:Name="_rightIcon"
                 VerticalOptions="Center"
                 Source="{Binding Source={x:Reference accordionView}, Path=RightIconSource}"
                 Grid.Column="3"
                 IsVisible="{Binding Source={x:Reference accordionView}, Path=RightIconSource, Converter={StaticResource ImageNullOrEmptyBoolConverter}}" />
          <ImageButton Grid.Column="4"
                       HeightRequest="32"
                       WidthRequest="32"
                       x:Name="_indicatorContainer"
                       Source="{x:Static constants:ImageConstants.ChevronDownIcon}"
                       HorizontalOptions="Center"
                       VerticalOptions="Center"
                       BackgroundColor="{StaticResource Transparent}"
                       Padding="0"
                       Margin="0,8"
                       Clicked="TitleTapped">
            <ImageButton.Triggers>
              <DataTrigger TargetType="ImageButton"
                           Binding="{Binding Source={x:Reference accordionView}, Path=ChevronPosition}"
                           Value="Left">
                <Setter Property="Grid.Column"
                        Value="0" />
              </DataTrigger>
              <DataTrigger TargetType="ImageButton"
                           Binding="{Binding Source={x:Reference accordionView}, Path=ChevronPosition}"
                           Value="Right">
                <Setter Property="Grid.Column"
                        Value="4" />
              </DataTrigger>
            </ImageButton.Triggers>
          </ImageButton>
        </Grid>
      </Grid>
    </Border>
  </ContentView.Content>
</ContentView>
